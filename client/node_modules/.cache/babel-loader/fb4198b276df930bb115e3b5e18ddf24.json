{"ast":null,"code":"var _jsxFileName = \"/Users/achin/Documents/CourseWork/CPSC436/CS436-A2/client/src/components/MessageList.js\";\n\n/*\nStarted off the assignment with https://bit.ly/2Wr10yi as template\n */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Messages from \"./Messages\";\nimport \"./MessageList.css\";\nimport { addMessage, postMessage, deleteMessageExpress } from \"../actions\";\n\nclass MessageList extends Component {\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => {\n      for (var i = 0; i < res.length; i++) {\n        //THIS IS BAD! PLEASE CHANGE IT ACHIN!\n        if (res[i]) {\n          this.props.addMessage(res[i]);\n          this.setState({\n            isLoading: false\n          });\n        }\n      }\n    }).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend', {\n        method: 'GET'\n      });\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.addItem = this.addItem.bind(this);\n    this.deleteMessage = this.deleteMessage.bind(this);\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  addItem(e) {\n    let that = this;\n    this.setState({\n      isLoading: true\n    });\n\n    if (this._inputElement.value !== \"\") {\n      var newItem = {\n        text: this._inputElement.value,\n        key: Date.now()\n      };\n      this.props.postMessage(newItem).then(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n      this._inputElement.value = \"\";\n    } //doesn't immediately get logged\n\n\n    console.log(this.props.items);\n    e.preventDefault();\n  }\n\n  deleteMessage(key) {\n    this.props.deleteMessageExpress(key);\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        className: \"messageListMain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"messageListMain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: a => this._inputElement = a,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"add\"))), React.createElement(Messages, {\n      entries: this.props.items,\n      delete: this.deleteMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //name is by convention\n  //state has entire state of app!!\n  return {\n    items: state.items\n  }; //now it will appear as props\n};\n\nexport default connect(mapStateToProps, {\n  addMessage,\n  postMessage,\n  deleteMessageExpress\n})(MessageList);","map":{"version":3,"sources":["/Users/achin/Documents/CourseWork/CPSC436/CS436-A2/client/src/components/MessageList.js"],"names":["React","Component","connect","Messages","addMessage","postMessage","deleteMessageExpress","MessageList","componentDidMount","callBackendAPI","then","res","i","length","props","setState","isLoading","catch","err","console","log","constructor","response","fetch","method","body","json","status","Error","message","addItem","bind","deleteMessage","state","e","that","_inputElement","value","newItem","text","key","Date","now","items","preventDefault","render","a","mapStateToProps"],"mappings":";;AAAA;;;AAIA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,mBAAP;AACA,SAAQC,UAAR,EAAoBC,WAApB,EAAiCC,oBAAjC,QAA4D,YAA5D;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAEhCO,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKC,cAAL,GACKC,IADL,CACWC,GAAD,IAAS;AACX,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC;AACA,YAAID,GAAG,CAACC,CAAD,CAAP,EAAY;AACR,eAAKE,KAAL,CAAWV,UAAX,CAAsBO,GAAG,CAACC,CAAD,CAAzB;AACA,eAAKG,QAAL,CAAc;AAACC,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACH;AACJ;AACJ,KATL,EAUKC,KAVL,CAUWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVlB;AAYH,GAhB+B,CAkBhC;;;AAWAG,EAAAA,WAAW,CAACP,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAVnBL,cAUmB,GAVF,YAAY;AACzB,YAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,EAAqB;AAACC,QAAAA,MAAM,EAAE;AAAT,OAArB,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;;AAEA,UAAIJ,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B;AACzB,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACH;;AACD,aAAOJ,IAAP;AACH,KAEkB;;AAEf,SAAKK,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,KAAL,GAAa;AAACjB,MAAAA,SAAS,EAAE;AAAZ,KAAb;AACH;;AAEDc,EAAAA,OAAO,CAACI,CAAD,EAAI;AACP,QAAIC,IAAI,GAAG,IAAX;AACA,SAAKpB,QAAL,CAAc;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAd;;AACA,QAAI,KAAKoB,aAAL,CAAmBC,KAAnB,KAA6B,EAAjC,EAAqC;AACjC,UAAIC,OAAO,GAAG;AACVC,QAAAA,IAAI,EAAE,KAAKH,aAAL,CAAmBC,KADf;AAEVG,QAAAA,GAAG,EAAEC,IAAI,CAACC,GAAL;AAFK,OAAd;AAKA,WAAK5B,KAAL,CAAWT,WAAX,CAAuBiC,OAAvB,EAAgC5B,IAAhC,CAAqC,MAAM;AACnC,aAAKK,QAAL,CAAc;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACH,OAFL;AAIA,WAAKoB,aAAL,CAAmBC,KAAnB,GAA2B,EAA3B;AACH,KAdM,CAgBP;;;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAW6B,KAAvB;AAEAT,IAAAA,CAAC,CAACU,cAAF;AACH;;AAEDZ,EAAAA,aAAa,CAACQ,GAAD,EAAM;AACf,SAAK1B,KAAL,CAAWR,oBAAX,CAAgCkC,GAAhC;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKZ,KAAL,CAAWjB,SAAf,EAA0B;AACtB,aACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;AAED,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKc,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,GAAG,EAAGgB,CAAD,IAAO,KAAKV,aAAL,GAAqBU,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CADJ,CADJ,EAQI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKhC,KAAL,CAAW6B,KAA9B;AACU,MAAA,MAAM,EAAE,KAAKX,aADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAaH;;AApF+B;;AAuFpC,MAAMe,eAAe,GAAId,KAAD,IAAW;AAAE;AACjC;AACA,SAAO;AAACU,IAAAA,KAAK,EAAEV,KAAK,CAACU;AAAd,GAAP,CAF+B,CAEF;AAChC,CAHD;;AAMA,eAAezC,OAAO,CAAC6C,eAAD,EAAkB;AAAC3C,EAAAA,UAAD;AAAaC,EAAAA,WAAb;AAA0BC,EAAAA;AAA1B,CAAlB,CAAP,CAA0EC,WAA1E,CAAf","sourcesContent":["/*\nStarted off the assignment with https://bit.ly/2Wr10yi as template\n */\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport Messages from \"./Messages\";\nimport \"./MessageList.css\";\nimport {addMessage, postMessage, deleteMessageExpress} from \"../actions\";\n\nclass MessageList extends Component {\n\n    componentDidMount() {\n        // Call our fetch function below once the component mounts\n        this.callBackendAPI()\n            .then((res) => {\n                for (var i = 0; i < res.length; i++) {\n                    //THIS IS BAD! PLEASE CHANGE IT ACHIN!\n                    if (res[i]) {\n                        this.props.addMessage(res[i]);\n                        this.setState({isLoading: false})\n                    }\n                }\n            })\n            .catch(err => console.log(err));\n\n    }\n\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callBackendAPI = async () => {\n        const response = await fetch('/express_backend', {method: 'GET'});\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n    constructor(props) {\n        super(props);\n        this.addItem = this.addItem.bind(this);\n        this.deleteMessage = this.deleteMessage.bind(this);\n        this.state = {isLoading: true};\n    }\n\n    addItem(e) {\n        let that = this;\n        this.setState({isLoading: true});\n        if (this._inputElement.value !== \"\") {\n            var newItem = {\n                text: this._inputElement.value,\n                key: Date.now()\n            };\n\n            this.props.postMessage(newItem).then(() => {\n                    this.setState({isLoading: false})\n                }\n            );\n            this._inputElement.value = \"\";\n        }\n\n        //doesn't immediately get logged\n        console.log(this.props.items);\n\n        e.preventDefault();\n    }\n\n    deleteMessage(key) {\n        this.props.deleteMessageExpress(key);\n    }\n\n    render() {\n        if (this.state.isLoading) {\n            return (\n                <div className=\"messageListMain\">\n                    <div className=\"loader\"></div>\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"messageListMain\">\n                <div className=\"header\">\n                    <form onSubmit={this.addItem}>\n                        <input ref={(a) => this._inputElement = a}>\n                        </input>\n                        <button type=\"submit\">add</button>\n                    </form>\n                </div>\n                <Messages entries={this.props.items}\n                          delete={this.deleteMessage}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => { //name is by convention\n    //state has entire state of app!!\n    return {items: state.items}; //now it will appear as props\n};\n\n\nexport default connect(mapStateToProps, {addMessage, postMessage, deleteMessageExpress})(MessageList);"]},"metadata":{},"sourceType":"module"}