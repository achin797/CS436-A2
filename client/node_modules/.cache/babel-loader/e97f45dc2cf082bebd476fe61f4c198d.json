{"ast":null,"code":"var _jsxFileName = \"/Users/achin/Documents/CourseWork/CPSC436/CS436-A2/client/src/components/MessageList.js\";\n\n/*\nStarted off the assignment with https://bit.ly/2Wr10yi as template\n */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Messages from \"./Messages\";\nimport \"./MessageList.css\";\nimport { addMessage, deleteMessage } from \"../actions\";\n\nclass MessageList extends Component {\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  //TODO use different method for resolving 'this' keyword\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null\n    };\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.addItem = this.addItem.bind(this);\n    this.deleteMessage = this.deleteMessage.bind(this);\n  }\n\n  addItem(e) {\n    if (this._inputElement.value !== \"\") {\n      var newItem = {\n        text: this._inputElement.value,\n        key: Date.now()\n      };\n      this.props.addMessage(newItem);\n      this._inputElement.value = \"\";\n    } //doesn't immediately get logged\n\n\n    console.log(this.props.items);\n    e.preventDefault();\n  }\n\n  deleteMessage(key) {\n    var filteredItems = this.props.items.filter(function (item) {\n      return item.key !== key;\n    });\n    this.props.deleteMessage(filteredItems);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"messageListMain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: a => this._inputElement = a,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"add\"))), React.createElement(Messages, {\n      entries: this.props.items,\n      delete: this.deleteMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.data));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //name is by convention\n  //state has entire state of app!!\n  return {\n    items: state.items\n  }; //now it will appear as props\n};\n\nexport default connect(mapStateToProps, {\n  addMessage,\n  deleteMessage\n})(MessageList);","map":{"version":3,"sources":["/Users/achin/Documents/CourseWork/CPSC436/CS436-A2/client/src/components/MessageList.js"],"names":["React","Component","connect","Messages","addMessage","deleteMessage","MessageList","componentDidMount","callBackendAPI","then","res","setState","data","express","catch","err","console","log","constructor","props","state","response","fetch","body","json","status","Error","message","addItem","bind","e","_inputElement","value","newItem","text","key","Date","now","items","preventDefault","filteredItems","filter","item","render","a","mapStateToProps"],"mappings":"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","sourcesContent":["/*\nStarted off the assignment with https://bit.ly/2Wr10yi as template\n */\n\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport Messages from \"./Messages\";\nimport \"./MessageList.css\";\nimport {addMessage, deleteMessage} from \"../actions\";\n\nclass MessageList extends Component {\n\n    state = {\n        data: null\n    };\n\n    componentDidMount() {\n        // Call our fetch function below once the component mounts\n        this.callBackendAPI()\n            .then(res => this.setState({data: res.express}))\n            .catch(err => console.log(err));\n    }\n\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callBackendAPI = async () => {\n        const response = await fetch('/express_backend');\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n    //TODO use different method for resolving 'this' keyword\n    constructor(props) {\n        super(props);\n        this.addItem = this.addItem.bind(this);\n        this.deleteMessage = this.deleteMessage.bind(this);\n    }\n\n    addItem(e) {\n        if (this._inputElement.value !== \"\") {\n            var newItem = {\n                text: this._inputElement.value,\n                key: Date.now()\n            };\n\n            this.props.addMessage(newItem);\n            this._inputElement.value = \"\";\n        }\n\n        //doesn't immediately get logged\n        console.log(this.props.items);\n\n        e.preventDefault();\n    }\n\n    deleteMessage(key) {\n        var filteredItems = this.props.items.filter(function (item) {\n            return (item.key !== key);\n        });\n\n        this.props.deleteMessage(filteredItems);\n    }\n\n    render() {\n        return (\n            <div className=\"messageListMain\">\n                <div className=\"header\">\n                    <form onSubmit={this.addItem}>\n                        <input ref={(a) => this._inputElement = a}>\n                        </input>\n                        <button type=\"submit\">add</button>\n                    </form>\n                </div>\n                <Messages entries={this.props.items}\n                          delete={this.deleteMessage}/>\n                <div>{this.state.data}</div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => { //name is by convention\n    //state has entire state of app!!\n    return {items: state.items}; //now it will appear as props\n};\n\n\nexport default connect(mapStateToProps, {addMessage, deleteMessage})(MessageList);"]},"metadata":{},"sourceType":"module"}